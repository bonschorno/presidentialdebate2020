filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 200, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Density\n",
x = "\nNumber of words") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "none",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 200, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "County\n",
x = "\nNumber of words") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "none",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
group_by(speaker, words) %>%
count()
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "County\n",
x = "\nNumber of words") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "none",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "County\n",
x = "\nNumber of words") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "County\n",
x = "\nNumber of words") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "County\n",
x = "\nNumber of words") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "none",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "none",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "bottom",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "bottom",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "bottom",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "bottom",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.8) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "bottom",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.6) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "bottom",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_histogram(bins = 100, alpha = 0.6, position = "stack") +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "bottom",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_density() +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "bottom",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_density(alpha = 0.6) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "bottom",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
ggplot(aes(x = id, y = words, group = speaker, color = speaker)) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(20, 420), labels = c("Start of the debate", "End of the debate")) +
labs(title = "Length of statements throughout the debate",
x = "",
y = "Number of words\n",
color = "") +
geom_line() +
theme(panel.grid = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_density(alpha = 0.6) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "top",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
install.packages("plotly")
library(plotly)
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplotly(aes(x = words, fill = speaker, color = speaker)) +
geom_density(alpha = 0.6) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "top",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_density(alpha = 0.6) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "top",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
ggplotly(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
test <- ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
ggplotly(test)
test <- number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_density(alpha = 0.6) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "top",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
ggplotly(test)
number_words %>%
filter(speaker != "wallace") %>%
select(words, speaker) %>%
ggplot(aes(x = words, fill = speaker, color = speaker)) +
geom_density(alpha = 0.6) +
scale_fill_manual(values = fill_values) +
scale_color_manual(values = fill_values) +
scale_x_continuous(breaks = c(0, 25, 50, 100, 200, 400), labels = c(0, 25, 50, 100, 200, 400)) +
labs(title = "Distribution of the statements' length",
y = "Count\n",
x = "\nNumber of words",
fill = "",
color = "") +
theme_minimal() +
theme(text = element_text(family = "IBM Plex Sans"),
legend.position = "top",
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"))
ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = "lightgrey"))
ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = "lightgrey"),
panel.border = element_line(color = "lightgrey"))
ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = "lightgrey"),
panel.border = element_rect(color = "lightgrey"))
ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = "lightgrey"),
panel.border = element_rect(color = "lightgrey"))
ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = "lightgrey"),
panel.border = element_rect(fill = "lightgrey"))
ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = "lightgrey"),
panel.border = element_rect(fill = "blue"))
ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = NA))
ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_blank())
ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = "lightgrey", color = "lightgrey"))
fill_values <- c("#950952","#18314F", "darkgrey")
ggplot(data = statements, aes(x = speaker, y = n, fill = speaker)) +
geom_bar(stat = "identity", width = 0.6) +
scale_fill_manual(values = fill_values) +
labs(title = "How many statements?",
x = "",
y = "Number of statements\n") +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = "lightgrey", color = "lightgrey"))
